upstream websocket {
    server socket-service:5000;
}

server {
     listen 80;
     listen [::]:80;
     server_name blurblur.kr;

     location /.well-known/acme-challenge/ {
             allow all;
             root /var/www/certbot;
     }  
    # ssl 인증서 발급용

    location / {
        proxy_pass http://client:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-Ip $remote_addr;
        return 301 https://blurblur.kr$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name blurblur.kr;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/blurblur.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/blurblur.kr/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    if ($host = 'www.blurblur.kr') {
        return 301 https://blurblur.kr$request_uri;
    }

    location / {
        proxy_pass http://client:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-Ip $remote_addr;
    }

    location /authentication/validate {
        internal;
        proxy_pass http://auth-service:8080/authentication/validate;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header Authorization $http_authorization;
    }

    location /auth {
        proxy_pass http://auth-service:8080/auth;
        proxy_set_header Host $host;
        proxy_set_header X-Real-Ip $remote_addr;
    }

    # location /oauth2 {
    #     proxy_pass http://auth-service:8080/oauth2;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-Ip $remote_addr;
    # }

    location /api/login {
        proxy_pass http://auth-service:8080/api/login;
        proxy_set_header Host $host;
        proxy_set_header X-Real-Ip $remote_addr;
    }

    location /api/ {
        auth_request /authentication/validate;
        auth_request_set $username $upstream_http_x_username;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://user-service:8081/;
        proxy_set_header X-Username $username;
        proxy_set_header Host $host;
        proxy_set_header X-Real-Ip $remote_addr;
    }

    location /socket {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_pass https://websocket/socket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # location /node {
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     proxy_http_version 1.1;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host $host;
    #     proxy_pass https://websocket/node;
    # }

}
